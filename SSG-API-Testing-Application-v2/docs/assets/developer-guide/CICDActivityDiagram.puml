@startuml
start
fork
:Runs on Ubuntu-latest;
:Checkout Repository;
:Set up Python 3.12;
:Install Dependencies;
:Execute Tests;

if (Tests executed without exceptions) then (yes)
    :Upload Code Coverage report;
else (no)
    stop
endif

fork again
:Runs on Windows-latest;
:Checkout Repository;
:Set up Python 3.12;
:Install Dependencies;
:Execute Tests;

if (Tests executed without exceptions) then (yes)
    :Upload Code Coverage report;
else (no)
    stop
endif

fork again
:Runs on macOS-latest;
:Checkout Repository;
:Set up Python 3.12;
:Install Dependencies;
:Execute Tests;

if (Tests executed without exceptions) then (yes)
    :Upload Code Coverage report;
else (no)
    stop
endif

endfork

:Begin process for setting up Terraform backend;
:Runs on Ubuntu-latest;
:Checkout Repository;
:Set up Terraform;
:Verify Terraform script;
:Initialise Terraform backend;
:Validate Terraform script;
:Apply Terraform script;

:Begin process for setting up ECR Repository;
:Runs on Ubuntu-latest;
:Checkout Repository;
:Set up Terraform;
:Verify Terraform script;
:Initialise Terraform backend;
:Validate Terraform script;
:Apply Terraform script;

:Begin process for setting up main infrastructure;
:Runs on Ubuntu-latest;
:Checkout Repository;
:Set up Terraform;
:Verify Terraform script;
:Initialise Terraform backend;
:Validate Terraform script;
:Apply Terraform script;

if (fail) then (yes))
    :Destory Infrastructure;
else (no)
    stop
endif

stop

@enduml